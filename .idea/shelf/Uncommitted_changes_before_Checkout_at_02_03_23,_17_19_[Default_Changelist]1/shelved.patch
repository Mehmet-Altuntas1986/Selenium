Index: src/test/java/com/cybertek/tests/day10_actions_js/ActionsTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.cybertek.tests.day10_actions_js;\n\nimport com.cybertek.utilities.WebDriverFactory;\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.interactions.Actions;\nimport org.testng.Assert;\nimport org.testng.annotations.BeforeMethod;\nimport org.testng.annotations.Test;\n\nimport java.util.List;\n\npublic class ActionsTest {\n\n\n    WebDriver driver;\n\n    @BeforeMethod\n    public void setUp(){\n        driver = WebDriverFactory.getDriver(\"chrome\");\n\n    }\n\n   // @AfterMethod\n    public void tearDown() throws InterruptedException {\n        Thread.sleep(2000);\n        driver.quit();\n    }\n  //bazi durumlarda maus ile resmin uzerine gelince yazilar beliriyor resmin altinda, bu yazilari inspect ediyoruz\n    @Test\n    public void hoverTest() throws InterruptedException {\n        driver.get(\"http://practice.cybertekschool.com/hovers\");\n\n        WebElement img1 = driver.findElement(By.tagName(\"img\"));\n        //Actions --> class that contains all the user interactions\n        //how to create actions object --> passing driver as a constructor\n        Actions actions = new Actions(driver);   //parantezin icine driver koyulmasinin sebebi , object ve browser arasinda baglanti kurmak\n        //perform() --> perform the action, complete the action\n        //moveToElement --> move your mouse to webelement(hover over)\n        Thread.sleep(2000);\n        actions.moveToElement(img1).perform();\n\n        WebElement viewLink = driver.findElement(By.linkText(\"View profile\"));  //resmin uzerine gelince altinda bir tane link vardi\n\n        Assert.assertTrue(viewLink.isDisplayed(),\"verify view link is displayed\");\n\n    }\n\n    @Test\n    public void dragAndDrop() throws InterruptedException {\n        driver.get(\"https://demos.telerik.com/kendo-ui/dragdrop/index\"); //driver ile acinca bir cookies cikiyor ekranda\n        driver.manage().window().maximize();\n\n\n        Actions actions = new Actions(driver);\n\n\n        //cookies olayini bu sekilde halledebiliriz\n        List<WebElement> acceptAndClose = driver.findElements(By.xpath(\"//*[.='Accept and Close']\"));  //  *  --> any Tag  ,   . --> this demek\n        List<WebElement> acceptCookies = driver.findElements(By.xpath(\"//*[.='Accept Cookies']\"));\n        Thread.sleep(1000);\n        if(acceptAndClose.size()>0){\n            acceptAndClose.get(0).click();  //get the first element and click it\n        }else if(acceptCookies.size()>0){\n            acceptCookies.get(0).click();          //bazen accept cookies tiklanmadan bir sonraki stepe gecilemez\n        }\n\n        WebElement source = driver.findElement(By.id(\"draggable\"));\n        WebElement target = driver.findElement(By.id(\"droptarget\"));\n\n\n        Thread.sleep(2000);\n        actions.dragAndDrop(source,target).perform();\n    }\n\n    @Test\n    public void dragAndDropChaining() throws InterruptedException {\n        driver.get(\"https://demos.telerik.com/kendo-ui/dragdrop/index\");\n        driver.manage().window().maximize();\n\n        Actions actions = new Actions(driver);\n  //Web elementini bulunca listede bir element olacagini dusun , bulamazsa empty\n        List<WebElement> acceptAndClose = driver.findElements(By.xpath(\"//*[.='Accept and Close']\"));\n        List<WebElement> acceptCookies = driver.findElements(By.xpath(\"//*[.='Accept Cookies']\"));\n        Thread.sleep(1000);\n        if(acceptAndClose.size()>0){   //if the list is  empty , it will not be more than 0\n            acceptAndClose.get(0).click();\n        }else if(acceptCookies.size()>0){\n            acceptCookies.get(0).click();\n        }\n\n        WebElement source = driver.findElement(By.id(\"draggable\"));  //kucuk top un locater i\n        WebElement target = driver.findElement(By.id(\"droptarget\"));  //buyuk top resmi\n\n        Thread.sleep(2000);\n        //mouse u source a hareket ettir , sonra CLICK AND HOLD IT , SONRA target a surukle AND release it\n        actions.moveToElement(source).clickAndHold().moveToElement(target).pause(2000).release().perform(); //moveto element\n\n\n    }\n\n}\n\n//Cookies lerde alertlere benziyor ama cookies leri inspect edebiliyoruz , alertleri edemeyiz\n\n//Actions class is used to do advanced user interactions like mouse hover, double click, drag and drop etc.\n//        Actions class is a class comes from selenium and is created by passing the webdriver object as constructor.\n//perform() --> perform the action, complete the action\n//moveToElement --> move your mouse to webelement(hover over)\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/com/cybertek/tests/day10_actions_js/ActionsTest.java b/src/test/java/com/cybertek/tests/day10_actions_js/ActionsTest.java
--- a/src/test/java/com/cybertek/tests/day10_actions_js/ActionsTest.java	
+++ b/src/test/java/com/cybertek/tests/day10_actions_js/ActionsTest.java	
@@ -66,12 +66,12 @@
             acceptCookies.get(0).click();          //bazen accept cookies tiklanmadan bir sonraki stepe gecilemez
         }
 
-        WebElement source = driver.findElement(By.id("draggable"));
-        WebElement target = driver.findElement(By.id("droptarget"));
+        WebElement dragable = driver.findElement(By.id("draggable"));
+        WebElement dropTarget = driver.findElement(By.id("droptarget"));
 
 
         Thread.sleep(2000);
-        actions.dragAndDrop(source,target).perform();
+        actions.dragAndDrop(dragable,dropTarget).perform();
     }
 
     @Test
